input {
  # HTTP input for RESTful log shipping
  http {
    port => 5000
    codec => json
  }

  # TCP input for syslog
  tcp {
    port => 5000
    type => syslog
  }

  # UDP input for syslog
  udp {
    port => 5000
    type => syslog
  }

  # Beats input for Filebeat, Metricbeat, etc.
  beats {
    port => 5044
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
    }
  }

  if [type] == "nginx" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
      target => "@timestamp"
    }
    
    geoip {
      source => "clientip"
    }
  }

  if [headers][request_path] {
    mutate {
      add_field => {
        "http_path" => "%{[headers][request_path]}"
      }
    }
  }

  # Handle JSON logs
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }

  # Add environment tag
  mutate {
    add_field => {
      "environment" => "${ENVIRONMENT:production}"
    }
  }

  # Add timestamp if missing
  if ![timestamp] {
    mutate {
      add_field => {
        "timestamp" => "%{@timestamp}"
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "prolaunch-logs-%{+YYYY.MM.dd}"
    template_name => "prolaunch-logs"
    template_overwrite => true
  }

  # Debug output
  if [loglevel] == "debug" {
    stdout {
      codec => rubydebug
    }
  }
}